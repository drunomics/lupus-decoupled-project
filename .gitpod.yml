image: drupalpod/drupalpod-gitpod-base:20240419

# ddev and composer are running as part of the prebuild
# when starting a workspace all docker images are ready
tasks:
  - init: |
      # $LD_PROJECT_TYPE lets you load different presets of environment variables.
      # For a list of supported project types, check out the README.me file.
      [[ -n $LD_PROJECT_TYPE ]] || LD_PROJECT_TYPE="base"
      source ./env/${LD_PROJECT_TYPE}.env || true
      ddev config --web-environment-add="FRONTEND_REPOSITORY=${FRONTEND_REPOSITORY:-https://github.com/drunomics/lupus-decoupled-nuxt3-demo}"
      ddev config --web-environment-add="FRONTEND_BRANCH=${FRONTEND_BRANCH:-main}"
      # Set environment variables for both Nuxt and Next frontends.
      ddev config --web-environment-add="NUXT_PUBLIC_DRUPAL_CE_DRUPAL_BASE_URL=$(gp url 8080)"
      ddev config --web-environment-add="NEXT_PUBLIC_DRUPAL_BASE_URL=$(gp url 8080)"
      # For an automated frontend login, set a shared parent domain:
      # ddev config --web-environment-add="DRUPAL_SERVICE_session__storage__options___cookie_domain=.gitpod.io"
      ddev start -y
      [[ -z $CUSTOM_ELEMENTS_VERSION ]] || ddev composer require drupal/custom_elements:$CUSTOM_ELEMENTS_VERSION --no-update
      ddev composer install
      [[ -z $ADDITIONAL_COMPOSER_PACKAGES ]] || ddev composer require $ADDITIONAL_COMPOSER_PACKAGES
      ddev drush si -y --site-name='lupus decoupled' standard
      if [[ -n $ADDITIONAL_RECIPES ]]; then
        for recipe in $(echo "$ADDITIONAL_RECIPES" | tr ',' '\n'); do
          ddev drush recipe $recipe
        done
      fi
      ddev drush recipe ../recipes/lupus_decoupled_recipe -y
      ddev drush en services_env_parameter -y
      # Configure lupus-decoupled frontend base URL
      ddev drush config:set lupus_decoupled_ce_api.settings frontend_base_url $(gp url 3000) -y
      echo "[NOTE] Setting default admin password for easy testing: lupus123"
      ddev drush user:password admin lupus123
    command: |
      ddev start -y
      gp ports await 8080 && gp preview $(ddev drush user-login)
      echo "Ready! Start testing by adding some content."
      echo "Backend: $(gp url 8080)"
      echo "Frontend: $(gp url 3000)"

# VScode xdebug extension
vscode:
  extensions:
    # PHP extensions.
    - felixfbecker.php-debug
    - wongjn.php-sniffer
    - neilbrayfield.php-docblocker
    - bmewburn.vscode-intelephense-client
    - andrewdavidblum.drupal-smart-snippets

    # Twig extensions.
    - mblode.twig-language-2

    # Bash extensions.
    - timonwong.shellcheck
    - rogalmic.bash-debug

ports:
  # Used by ddev - local db clients
  - port: 3306
    onOpen: ignore
  # Used by projector
  - port: 6942
    onOpen: ignore
  # Used by MailHog
  - port: 8027
    onOpen: ignore
  # Used by phpMyAdmin
  - port: 8036
    onOpen: ignore
  # Direct-connect ddev-webserver port that is the main port
  - port: 8080
    onOpen: ignore
    # Make it public to allow CORS requests to work without credential issues
    visibility: public
  # Ignore host https port
  - port: 8443
    onOpen: ignore
  - port: 3000
    onOpen: ignore
  - port: 3433
    onOpen: ignore
  # xdebug port
  - port: 9003
    onOpen: ignore
  # projector port
  - port: 9999
    onOpen: open-browser

github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: true
    # enable for all branches in this repo (defaults to false)
    branches: true
    # enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
    # enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: true
    # add a check to pull requests (defaults to true)
    addCheck: true
    # add a "Review in Gitpod" button as a comment to pull requests (defaults to false)
    addComment: false
    # add a "Review in Gitpod" button to the pull request's description (defaults to false)
    addBadge: true
    # add a label once the prebuild is ready to pull requests (defaults to false)
    addLabel: true
