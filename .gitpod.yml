image: drupalpod/drupalpod-gitpod-base:20221021

# ddev and composer are running as part of the prebuild
# when starting a workspace all docker images are ready
tasks:
  - init: |
      ddev config --web-environment-add="FRONTEND_REPOSITORY=${FRONTEND_REPOSITORY:-https://github.com/drunomics/lupus-decoupled-nuxt-demo}" 
      ddev config --web-environment-add="DRUPAL_BASE_URL=$(gp url 8080)/ce-api"
      ddev start -y
      ddev composer install
      ddev drush si -y --account-pass=admin --site-name='lupus decoupled' standard
      ddev drush en lupus_decoupled -y
      # Configure lupus-decoupled frontend base URL
      ddev drush config:set lupus_decoupled_ce_api.settings frontend_base_url $(gp url 3000) -y
    command: |
      ddev start -y
      gp ports await 8080 && curl -sS $(gp url 8080) >/dev/null && gp preview $(ddev drush user-login)
      echo "Ready! Start testing by adding some content."
      echo "Backend: $(gp url 8080)"
      echo "Frontend: $(gp url 3000)"

# VScode xdebug extension
vscode:
  extensions:
    # PHP extensions.
    - felixfbecker.php-debug
    - wongjn.php-sniffer
    - neilbrayfield.php-docblocker
    - bmewburn.vscode-intelephense-client
    - andrewdavidblum.drupal-smart-snippets

    # Twig extensions.
    - mblode.twig-language-2

    # Bash extensions.
    - timonwong.shellcheck
    - rogalmic.bash-debug

ports:
  # Used by ddev - local db clients
  - port: 3306
    onOpen: ignore
  # Used by projector
  - port: 6942
    onOpen: ignore
  # Used by MailHog
  - port: 8027
    onOpen: ignore
  # Used by phpMyAdmin
  - port: 8036
    onOpen: ignore
  # Direct-connect ddev-webserver port that is the main port
  - port: 8080
    onOpen: ignore
    # Make it public to allow CORS requests to work without credential issues
    visibility: public
  # Ignore host https port
  - port: 8443
    onOpen: ignore
  - port: 3000
    onOpen: ignore
  - port: 3433
    onOpen: ignore
  # xdebug port
  - port: 9003
    onOpen: ignore
  # projector port
  - port: 9999
    onOpen: open-browser

github:
  prebuilds:
    # enable for the master/default branch (defaults to true)
    master: true
    # enable for all branches in this repo (defaults to false)
    branches: true
    # enable for pull requests coming from this repo (defaults to true)
    pullRequests: true
    # enable for pull requests coming from forks (defaults to false)
    pullRequestsFromForks: true
    # add a check to pull requests (defaults to true)
    addCheck: true
    # add a "Review in Gitpod" button as a comment to pull requests (defaults to false)
    addComment: false
    # add a "Review in Gitpod" button to the pull request's description (defaults to false)
    addBadge: true
    # add a label once the prebuild is ready to pull requests (defaults to false)
    addLabel: true
